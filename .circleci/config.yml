version: 2.1
orbs:
  gradle: circleci/gradle@3.0.0
  browser-tools: circleci/browser-tools@1.4.6
  github-cli: circleci/github-cli@2.7.0
_defaults: &defaults
  working_directory: ~/code
  environment:
    JVM_OPTS: -Xmx4G
_image: &image
  docker:
    - image: cimg/openjdk:22.0.2-browsers@sha256:6a2c48853a3693d1673ae10a0146c999de37d810cc507ef085ec7f15e03396e5
  resource_class: large
commands:
  with_cache:
    description: "Caches and restores gradle dependencies"
    parameters:
      cache_key:
        type: string
        default: v1
      steps:
        type: steps
    steps:
      - run:
          name: Generate cache keys
          command: grep 'kotlin =' 'gradle/libs.versions.toml' > konan-cache.txt
      - restore_cache:
          key: >-
            konan-<< parameters.cache_key >>-{{ checksum "konan-cache.txt" }}
      - restore_cache:
          keys:
            - gradle-cache-<< parameters.cache_key >>-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "gradle/libs.versions.toml" }}-{{ .Branch }}
            - gradle-cache-<< parameters.cache_key >>-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "gradle/libs.versions.toml" }}
            - gradle-cache-<< parameters.cache_key >>-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-
            - gradle-cache-<< parameters.cache_key >>-
      - restore_cache:
          key: local-cache-<< parameters.cache_key >>-{{ .Branch }}
      - steps:
          << parameters.steps >>
      - save_cache:
          key: >-
            konan-<< parameters.cache_key >>-{{ checksum "konan-cache.txt" }}
          paths:
            - ~/.konan
      - save_cache:
          key: >-
            gradle-cache-<< parameters.cache_key >>-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "gradle/libs.versions.toml" }}-{{ .Branch }}
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
      - save_cache:
          key: local-cache-<< parameters.cache_key >>-{{ .Branch }}
          paths:
            - ./.gradle
            - ./.kotlin
  gradle_publish:
    description: "Publishes to sonatype/maven central"
    parameters:
      publish_task:
        type: string
        default: publish
      target:
        type: string
        default: ""
    steps:
      - run:
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              echo "$MAVEN_CENTRAL_SEC_RING" | base64 -d > $HOME/secring.gpg
              ./gradlew << parameters.publish_task >> -PreleaseTarget="<< parameters.target >>" -PsonatypeUsername="$SONATYPE_USERNAME" -PsonatypePassword="$SONATYPE_PASSWORD" -Psigning.keyId="$MAVEN_CENTRAL_KEY_ID" -Psigning.password="$MAVEN_CENTRAL_KEY_PASSPHRASE" -Psigning.secretKeyRingFile=$HOME/secring.gpg --no-parallel
            fi
jobs:
  build-linux:
    <<: *image
    <<: *defaults
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - with_cache:
          cache_key: linux
          steps:
            - run:
                name: Build
                command: ./gradlew assemble
                # split up compiling and running tests to prevent OOM errors
            - run:
                name: Compile Tests
                command: ./gradlew linkDebugTestLinuxX64 linkDebugTestMingwX64 compileTestDevelopmentExecutableKotlinJs compileTestDevelopmentExecutableKotlinWasmJs
            - run:
                name: Run Tests
                command: ./gradlew check --continue -x jsBrowserTest -x wasmJsBrowserTest
            - run:
                name: Run Browser Tests
                command: ./gradlew jsBrowserTest -x wasmJsBrowserTest
            - gradle/collect_test_results:
                test_results_path: build/test-results
                reports_path: build/reports
            - gradle_publish:
                target: linux
  build-macos:
    macos:
      xcode: "16.0.0"
    resource_class: macos.m1.medium.gen1
    <<: *defaults
    steps:
      - checkout
      - with_cache:
          cache_key: macos
          steps:
            - run:
                name: Build
                command: ./gradlew assemble
            - run:
                name: Run Tests
                command: ./gradlew checkApple --continue
            - gradle/collect_test_results:
                test_results_path: build/test-results
                reports_path: build/reports
            - gradle_publish:
                publish_task: publishApple
                target: macos
  finalize-release:
    <<: *image
    <<: *defaults
    steps:
      - github-cli/install
      - checkout
      - with_cache:
          cache_key: linux
          steps:
            - run:
                name: Close & Release
                command: |
                  ./gradlew findSonatypeStagingRepository closeAndReleaseSonatypeStagingRepository -PreleaseTarget=linux -PsonatypeUsername="$SONATYPE_USERNAME" -PsonatypePassword="$SONATYPE_PASSWORD"
                  ./gradlew findSonatypeStagingRepository closeAndReleaseSonatypeStagingRepository -PreleaseTarget=macos -PsonatypeUsername="$SONATYPE_USERNAME" -PsonatypePassword="$SONATYPE_PASSWORD"
            - run:
                name: Query Version
                command: |
                  sed -nE 's/kotlin-inject *= *"([^"]+)"/v\1/p' gradle/libs.versions.toml > version.txt
                  echo "export VERSION=\"$(cat version.txt)\"" >> "$BASH_ENV"
            - run:
                name: Publish Github Release
                command: |
                  if [[ ! "${VERSION}" =~ .*"-SNAPSHOT" ]]; then
                    ./gradlew -q getChangelog > RELEASE.md
                    gh release create "${VERSION}" -F RELEASE.md
                  fi
workflows:
  version: 2
  build:
    jobs:
      - build-linux:
          filters:
            branches:
              ignore:
                - main
      - build-macos:
          filters:
            branches:
              ignore:
                - main
      - build-linux:
          name: build-linux-publish
          context: opensource-maven
          filters:
            branches:
              only:
                - main
      - build-macos:
          name: build-macos-publish
          context: opensource-maven
          filters:
            branches:
              only:
                - main
      - finalize-release:
          context: opensource-maven
          requires:
            - build-linux-publish
            - build-macos-publish
          filters:
            branches:
              only:
                - main